buildscript {
    ext {
        awsSdkVersion = '1.11.849'
    }
}
plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.gorylenko.gradle-git-properties' version '2.2.2'
    id 'java'
    id 'idea'
}

group = 'ru.fakel.smile.file.hosting'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_14
}

configurations {
    compileOnly.extendsFrom annotationProcessor
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok',
            'jakarta.annotation:jakarta.annotation-api',
            'jakarta.persistence:jakarta.persistence-api'
    )

    compileOnly 'org.projectlombok:lombok'

    implementation(
            'org.springframework.boot:spring-boot-starter-web',
            'org.projectlombok:lombok',
            "com.amazonaws:aws-java-sdk-s3:$awsSdkVersion"
    )

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'jakarta.annotation:jakarta.annotation-api',
            'jakarta.persistence:jakarta.persistence-api'
    )
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}
